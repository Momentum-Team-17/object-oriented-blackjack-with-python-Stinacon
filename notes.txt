classes

Card- attributes
    - suit
    - rank

- methods


Deck
- cards

- shuffle
- deal card

Player
- name
- is it their turn
- hand/cards
    - score (card suit/rank tally)

- hit or check
- 

Game
- winner/loser
- on or off

What I had as of Tuesday morning class:
SUITS = ['‚ô•Ô∏è', 'üî∂', '‚ô£Ô∏é', '‚ô†Ô∏é']
RANKS = [2, 3, 4, 5, 6, 7, 8, 9, 10, 'J', 'Q', 'K', 'A']


class Card:
    def __init__(self, suit, rank):
        self.suit = suit
        self.rank = rank

    def __str__(self):
        return f'{self.rank} of {self.suit}'


class Deck:

    def __init__(self):
        self.cards = []
        # adding card as an attribute to class Deck

    def add_cards(self):
        for suit in SUITS:
            for rank in RANKS:
                new_card = Card(suit, rank)
                self.cards.append(new_card)


class Game:
    def __init__(self):
        # also adding attributes to the class Game
        self.player = None
        self.dealer = None
        self.deck = None
        self.setup()


def setup(self):
    self.deck = Deck()
    # calls line 13
    self.deck.add_cards()
    # calls line 16
    for card in self.deck.cards:
        print(card)


new_game = Game()
# created the game and the deck with cards

# TO-DO:
# make a player, like we did with deck
# make a dealer
# play
# shuffle
# deal cards
# player's turn (hit or stay)
# calculate score from cards in hand
# dealer's turn (hit or stay)
# calculate score from cards in hand
# who won/lost/busted/21
